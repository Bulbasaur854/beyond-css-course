// colors
$color-neutral-100: #fff;
$color-neutral-900: #1a4232;
$color-primary-400: #5e957f;

// font-families
$ff-sans: "Open Sans", sans-serif;

// font-sizes
$fs-900: 3.75rem; // 60px
$fs-800: 3rem; // 48px
$fs-600: 1.5rem; // 24px
$fs-500: 1.3125rem; // 21px
$fs-400: 1.125rem; // 18px

// font-weights
$fw-400: 400;
$fw-700: 700;

// size/spacing values (Including the border-width)
$size-8: 0.5rem;
$size-12: 0.75rem; // (not in design)
$size-16: 1rem;
$size-20: 1.25rem;
$size-32: 2rem;
$size-36: 2.25rem;

// simple reset
*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    padding: 0;
    font: inherit;
}

// project styles
body {
    font-size: $fs-400;
    font-weight: $fw-400;
    font-family: $ff-sans;
    color: $color-neutral-900;
    background-color: $color-neutral-100;
    text-align: center;
}

.container {
    width: min(100% - 2rem, 60rem);
    margin-inline: auto;
}

.page-title {
    color: $color-primary-400;
    font-size: $fs-900;
    margin-block: $size-32; // will not be added normally - taken from Figma file
}

.pricing-plans {
    border: $size-8 solid $color-primary-400;
    display: flex; // will normally use grid - this is for simplicity
}

.tier {
    flex: 1;
    padding: $size-36;
    display: grid;
    gap: $size-20;

    &__title {
        text-transform: uppercase;
        font-weight: $fw-700;
        color: $color-primary-400;

        // for inverted colors
        .inverted & {
            color: $color-neutral-100;
        }
    }

    &__feature-list {
        list-style: none;
    }

    &__list-item {
        &:not(:last-child)::after {
            content: "";
            display: block;
            height: 1px;
            margin-block: $size-20;
            background-color: $color-neutral-900;
            opacity: 0.2;
        }
    }

    &__price {
        font-size: $fs-800;
        font-weight: $fw-700;

        // no '&' due to it being decedent
        span {
            font-size: $fs-600;
            font-weight: $fw-400;
        }
    }
}

// not nesting the button as it should be an independant component
.button {
    cursor: pointer;
    border: 0;
    text-transform: uppercase;
    font-weight: $fw-700;
    color: $color-neutral-100;
    background-color: $color-primary-400;
    padding: 1em 1.5em; // use 'em' so if we change font size the padding will adjust to it

    justify-self: center; // fixes buttons streching due to grid

    // will normally make this a seperate class
    .inverted & {
        color: $color-primary-400;
        background-color: $color-neutral-100;
    }

    &:hover,
    &:focus {
        color: $color-neutral-100;
        background-color: rgb($color-neutral-900, 0.7);
    }
}

// utility class to for inverted color scheme
.inverted {
    background-color: $color-primary-400;
    color: $color-neutral-100;
}
